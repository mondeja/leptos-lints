name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  qa:
    name: QA
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        job: [pre-commit, lychee, cargo-machete]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        if: matrix.job == 'cargo-machete' || matrix.job == 'pre-commit'
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable
          profile: minimal
      - name: Install cargo-fmt
        if: matrix.job == 'pre-commit'
        run: rustup component add --toolchain nightly-2025-05-14-x86_64-unknown-linux-gnu rustfmt
      - name: Set up Python
        if: matrix.job == 'pre-commit'
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        if: matrix.job == 'pre-commit'
        run: |
          pip install --upgrade pip
          pip install pre-commit
      - name: Lint
        if: matrix.job == 'pre-commit'
        run: pre-commit run --all-files --show-diff-on-failure
      - name: Restore lychee cache
        if: matrix.job == 'lychee'
        uses: actions/cache@v4
        with:
          path: .lycheecache
          key: cache-lychee-${{ github.sha }}
          restore-keys: cache-lychee-
      - name: Run Lychee
        if: matrix.job == 'lychee'
        uses: lycheeverse/lychee-action@v2
        with:
          args: "--cache --max-cache-age 1d ."
      - uses: taiki-e/install-action@v2
        if: matrix.job == 'cargo-machete'
        with:
          tool: cargo-machete
      - name: Run cargo-machete
        if: matrix.job == 'cargo-machete'
        run: cargo machete --skip-target-dir

  unit-tests:
    name: Unit tests
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable
          profile: minimal
      - name: Install Dylint
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-dylint,dylint-link
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-unit-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Run unit tests
        run: cargo test --all
